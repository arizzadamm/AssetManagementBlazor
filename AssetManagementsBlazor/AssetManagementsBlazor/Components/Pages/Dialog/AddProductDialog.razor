@inherits LayoutComponentBase
@using AssetManagementsBlazor.ViewModel
@inject IDialogService DialogService
@inject ICategoryService CategoryService
@inject IProductService ProductService

<MudPopoverProvider />

<MudDialog>
<DialogContent>
        <MudText Typo="Typo.h6">Add New Product</MudText>
        <MudForm @ref="form" OnValidSubmit="HandleValidSubmit">
            <MudTextField @bind-Value="ProductName" Label="Product Name" Required="true" />

            <!-- Dropdown Select for Category -->
            <MudSelect @bind-Value="SelectedCategoryOid" Label="Category" Required="true">
                @foreach (var category in categories)
                {
                    <MudSelectItem Value="@category.CategoryOid">@category.Name</MudSelectItem>
                }
            </MudSelect>

            <MudTextField @bind-Value="Description" Label="Description" Required="true" />
            <MudTextField @bind-Value="Price" Label="Price" Required="true" />
            <MudTextField @bind-Value="Stock" Label="Stock Quantity" Required="true" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Secondary" OnClick="@Cancel">Cancel</MudButton>
        <MudButton StartIcon="@Icons.Material.Filled.Save" Color="Color.Info" OnClick="@SubmitForm">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private List<CategoryViewModel> categories = new List<CategoryViewModel>();
    [Parameter] public EventCallback<ProductViewModel> OnValidSubmit { get; set; }
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string ProductName { get; set; }
    [Parameter] public Guid SelectedCategoryOid { get; set; }
    [Parameter] public string Description { get; set; }
    [Parameter] public int Price { get; set; }
    [Parameter] public int Stock { get; set; }
    private MudForm form;
    private void Cancel() => MudDialog.Cancel();

    // private void Confirm() => MudDialog.Close(DialogResult.Ok(true));

    private async Task LoadCategories()
    {
        try
        {
            categories = await CategoryService.GetAllCategories();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading categories: " + ex.Message);
        }
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        StateHasChanged();
        await LoadCategories();
        StateHasChanged();
    }
    private async Task HandleValidSubmit()
    {
        var newProduct = new ProductViewModel
            {
                ProductName = ProductName,
                CategoryOid = SelectedCategoryOid,
                Description = Description,
                Price = Price,
                StockQuantity = Stock
            };
        await OnValidSubmit.InvokeAsync(newProduct);
        MudDialog.Close(DialogResult.Ok(true)); // Menutup dialog setelah submit

    }

    private async Task SubmitForm()
    {
        await form.Validate();
        if (form.IsValid)
        {
            await HandleValidSubmit();
        }
    }
}